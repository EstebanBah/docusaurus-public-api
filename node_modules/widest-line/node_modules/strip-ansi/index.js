import ansiRegex from 'ansi-regex';

<<<<<<< Updated upstream
const regex = ansiRegex();

=======
>>>>>>> Stashed changes
export default function stripAnsi(string) {
	if (typeof string !== 'string') {
		throw new TypeError(`Expected a \`string\`, got \`${typeof string}\``);
	}

<<<<<<< Updated upstream
	// Even though the regex is global, we don't need to reset the `.lastIndex`
	// because unlike `.exec()` and `.test()`, `.replace()` does it automatically
	// and doing it manually has a performance penalty.
	return string.replace(regex, '');
=======
	return string.replace(ansiRegex(), '');
>>>>>>> Stashed changes
}
